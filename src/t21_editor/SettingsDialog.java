/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SettingsDialog.java
 *
 * Created on Feb 21, 2012, 6:32:49 PM
 */
package t21_editor;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Jon
 */
public class SettingsDialog extends javax.swing.JDialog {

    /** Creates new form SettingsDialog */
    public SettingsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getRootPane().setDefaultButton(okButton);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dirFileChooser = new javax.swing.JFileChooser();
        appDirLabel = new javax.swing.JLabel();
        appDirText = new javax.swing.JTextField();
        appDirButton = new javax.swing.JButton();
        userDirButton = new javax.swing.JButton();
        userDirText = new javax.swing.JTextField();
        userDirLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        dirFileChooser.setAcceptAllFileFilterUsed(false);
        dirFileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Settings");
        setLocationByPlatform(true);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        appDirLabel.setText("SimCity App Directory:");
        appDirLabel.setPreferredSize(new java.awt.Dimension(109, 14));

        appDirText.setBackground(new java.awt.Color(255, 255, 255));
        appDirText.setEditable(false);
        appDirText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        appDirButton.setText("...");
        appDirButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        appDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appDirButtonActionPerformed(evt);
            }
        });

        userDirButton.setText("...");
        userDirButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        userDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userDirButtonActionPerformed(evt);
            }
        });

        userDirText.setBackground(new java.awt.Color(255, 255, 255));
        userDirText.setEditable(false);
        userDirText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        userDirLabel.setText("User Plugins Directory:");

        cancelButton.setMnemonic('C');
        cancelButton.setText("Cancel");
        cancelButton.setToolTipText("");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setMnemonic('O');
        okButton.setText("OK");
        okButton.setMargin(new java.awt.Insets(2, 19, 2, 19));
        okButton.setMaximumSize(new java.awt.Dimension(67, 23));
        okButton.setMinimumSize(new java.awt.Dimension(67, 23));
        okButton.setPreferredSize(new java.awt.Dimension(67, 23));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(appDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(appDirText, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(appDirButton))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(userDirLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(userDirText, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(userDirButton))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(appDirText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(appDirButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userDirLabel)
                    .addComponent(userDirText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userDirButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void appDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appDirButtonActionPerformed
        File appDir;
        if(!appDirText.getText().equals("")) {
            appDir = new File(appDirText.getText());
            if(appDir.exists() && appDir.isDirectory()) {
                dirFileChooser.setSelectedFile(appDir);
            }
        }
        int result = dirFileChooser.showDialog(this, "Select SimCity App Directory");
        if(result == JFileChooser.APPROVE_OPTION) {
            appDir = dirFileChooser.getSelectedFile();
            if(appDir.exists() && appDir.isDirectory())
                appDirText.setText(appDir.getPath());
        }
    }//GEN-LAST:event_appDirButtonActionPerformed

    private void userDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userDirButtonActionPerformed
        File userDir;
        if(!userDirText.getText().equals("")) {
            userDir = new File(userDirText.getText());
            if(userDir.exists() && userDir.isDirectory()) {
                dirFileChooser.setSelectedFile(userDir);
            }
        }
        int result = dirFileChooser.showDialog(this, "Select User Plugins Directory");
        if(result == JFileChooser.APPROVE_OPTION) {
            userDir = dirFileChooser.getSelectedFile();
            if(userDir.exists() && userDir.isDirectory())
                userDirText.setText(userDir.getPath());
        }
    }//GEN-LAST:event_userDirButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        SettingsManager.putSetting(SettingsManager.APPDIR, appDirText.getText());
        SettingsManager.putSetting(SettingsManager.USERPLUGINS, userDirText.getText());
        if(force)
            SettingsManager.writeSettings();
        this.force = false;
        this.setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        cancel();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cancel();
    }//GEN-LAST:event_formWindowClosing
    
    public void forceSettings() {
        force = true;
        JOptionPane.showMessageDialog(T21Editor.app, "Settings file not found, please set the SimCity 4 directories.", "Settings not found", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(true);
    }
    
    private void cancel() {
        if(!force)
            this.setVisible(false);
        else
            JOptionPane.showMessageDialog(this, "Please set the Application and User paths before proceeding.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    @Override
    public void setVisible(boolean bln) {
        
        String s;
        if((s = SettingsManager.getSetting(SettingsManager.APPDIR)) != null)
            this.appDirText.setText(s);
        if((s = SettingsManager.getSetting(SettingsManager.USERPLUGINS)) != null)
            this.userDirText.setText(s);

        super.setVisible(bln);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton appDirButton;
    private javax.swing.JLabel appDirLabel;
    private javax.swing.JTextField appDirText;
    private javax.swing.JButton cancelButton;
    private javax.swing.JFileChooser dirFileChooser;
    private javax.swing.JButton okButton;
    private javax.swing.JButton userDirButton;
    private javax.swing.JLabel userDirLabel;
    private javax.swing.JTextField userDirText;
    // End of variables declaration//GEN-END:variables

    private boolean force = false;
}
